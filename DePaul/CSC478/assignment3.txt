## Part 1

Consider the sklearn.datasets.digits seen in class. Each image consists of 8x8 pixels. 

Perform the following transformations on each image and for each transoformation try both the K-nearest-neighbors and the LogisticRegression to classify each of the 9 digits.
- convert every pixel to 1 if it contains a signal, 0 otherwise
- add the pixels by row and by column to covert 8x8 features into 8+8 features
- pick a random subset of 8 pixels from within the image
For each transformation and for each algorithm, report in a table the F1 of the worst performing digit.

## Part 2

If you wanted to try all combinations of 8 pixels? How many combinatons would ou have to try? If we wanted to know which subset of 8 pixels results in best classification, without trying all possible combinations, which strategy would you suggest? How may times do you have to run the classifier in your proposed strategy? Implement your strategy. Which 8 pixels are the most significative? What is the precision and recall for each digit?




Download Ethereum historical data from Kaggle. 

https://www.kaggle.com/sudalairajkumar/cryptocurrencypricehistory/downloads/ethereum_dataset.csv

Concentrate on two columns only: the timestamp and the price in dollars (eth_etherprice). Do not shuffle the dataset but break it into two halves. Treat the first half as training and the second half as testing data. For every trading day compute the log return of the previous 10 days closing price. Treat the log return of the prevous 10 days as distinct features and try predict whether the log return of the next day will be positive or negative. In your notebook run the prediciton using KNN and the LogisticRegression algorithms. Show the confusion matrix and compute the F1 parameter.

Assume you have $1000 cash on the first day of testing. For every following day apply the follow strategy: if you have cash and you predict the price will go up the next day: buy as much ethereum as you can. If you predict the price will go down and you own ethereum: sell it all. What will be your net worth on the last day of testing data? What would your net worth be if, instead, you had bought ethereum on the first day and sold only on the last day? Always assume you can buy/sell at the listed price for the day, also assume no transaction costs.

Feel free to suggest a better strategy than the ones below. Show your strategy works better.



